docker-compose up -d
docker-compose down
docker-compose up --build
go run main.go
-- my sql
mysql -u myuser -p
mypassword
SHOW TABLES;
USE mydatabase;
DELETE FROM todo_items WHERE condition;
DROP TABLE todo_items;
SELECT * FROM tags;
//----------
go mod init mongo
go get go.mongodb.org/mongo-driver/mongo



add to github

echo "# gocloth" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/banhcuonbathanh/gocloth.git
git push -u origin main

gin -p 8000 run main.go

"gorm.io/driver/mysql"
"gorm.io/gorm"
mysql -h 127.0.0.1 -P 3306 -u root -p


docker ps
docker-compose up --build
docker run --name servername -e MYSQL_ROOT_PASSWORD=12345 -e MYSQL_USER=root -d -p 3306:3306 mysql:latest


// mysql
mysql -u myuser -p

CREATE DATABASE testdatabse;
EXIT;
SHOW DATABASES;
CREATE TABLE employees (
id INT AUTO_INCREMENT PRIMARY KEY,
first_name VARCHAR(50) NOT NULL,
last_name VARCHAR(50) NOT NULL,
email VARCHAR(100) UNIQUE NOT NULL,
date_joined DATE NOT NULL
);

mysql -u root -p

brew services stop mysql
brew uninstall mysql
sudo rm -rf /usr/local/var/mysql


// my sql



CREATE TABLE todo_items (
    id INT AUTO_INCREMENT PRIMARY KEY,
    description VARCHAR(255),
    title VARCHAR(255),
    status VARCHAR(50),
    created_at DATETIME,
    updated_at DATETIME
);


next js
,env contend:


NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_test_cmFyZS1weXRob24tOC5jbGVyay5hY2NvdW50cy5kZXYk
CLERK_SECRET_KEY=sk_test_nL7fOvz0qxAlnWVc1Qu8uAwj4ZqsUHQaZzpy4kwGHS
NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/
NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/
FRONTEND_STORE_URL=http://localhost:3000
NEXT_PUBLIC_API_URL=http://localhost:3000/api/509c865c-f0eb-4496-a06e-cc17616bfebf
# This was inserted by `prisma init`:
# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings

DATABASE_URL='mysql://n69hu873kcaxd8feazzi:pscale_pw_tLXqwCncDvliyhcOeERD3dWbK0GHqvNME3XQx1FvwFl@aws.connect.psdb.cloud/cloth?sslaccept=strict'
NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME="dirs6avbc"

